error_log /var/log/nginx/error.log debug;

upstream myapp {
    server trippidy-payara:8080;
}

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name trippidy.koten.dev;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect HTTP to HTTPS for all domains and subdomains
    #  location / {
    #      return 301 https://$host:9680$request_uri;
    #  }

    # Payara server providing API
    location /api {
        proxy_pass  http://myapp;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }
}

server {
    listen 443 ssl;
    server_name trippidy.koten.dev;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/trippidy.koten.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/trippidy.koten.dev/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /jenkins/ {
            proxy_pass  http://jenkins:8080/jenkins/;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    # I use this proxy to get images for the client because when the client in running on localhost, there is a problem with CORS in the response headers from some external services like gravatar.
    location /external-img/ {
        # Remove the /external-img prefix
        rewrite ^/external-img/(.*) /$1 break;

        # The actual image URL will be passed as a query parameter
        resolver 8.8.8.8;
        proxy_pass $arg_url;

        # Set headers that the external service might expect.
        proxy_set_header User-Agent $http_user_agent;

        # Use the original client IP address for logging on the upstream server.
        proxy_set_header X-Real-IP $remote_addr;

        proxy_cache my_cache;
        proxy_cache_valid 200 302 60m;
        proxy_cache_valid 404 1m;
        add_header X-Proxy-Cache $upstream_cache_status;

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
    }

    # Another nginx server running flutter web app
    location / {
        # Add the CORS headers
        add_header 'Access-Control-Allow-Origin' '$http_origin';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type';

        proxy_pass  http://flutter-web-app:80;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    # Payara server providing API
    location /api {
        # Add the CORS headers
        add_header 'Access-Control-Allow-Origin' '$http_origin';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type';

        proxy_pass  http://trippidy-payara:8080;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

}